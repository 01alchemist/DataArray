{"version":3,"sources":["/Users/nidin/workspace/xdata/webpack/universalModuleDefinition","/Users/nidin/workspace/xdata/webpack/bootstrap","/Users/nidin/workspace/xdata/src/core.ts","/Users/nidin/workspace/xdata/src/ctypes/Int64.ts","/Users/nidin/workspace/xdata/src/ctypes/UInt64.ts","/Users/nidin/workspace/xdata/src/xdata/lzma/BitTreeDecoder.ts","/Users/nidin/workspace/xdata/src/xdata/lzma/LZMA.ts","/Users/nidin/workspace/xdata/src/xdata/lzma/LenDecoder.ts","/Users/nidin/workspace/xdata/src/xdata/lzma/LzmaDecoder.ts","/Users/nidin/workspace/xdata/src/xdata/lzma/OutWindow.ts","/Users/nidin/workspace/xdata/src/xdata/lzma/RangeDecoder.ts","/Users/nidin/workspace/xdata/src/xdata/utils/BitArray.ts","/Users/nidin/workspace/xdata/src/xdata/utils/ByteArray.ts","/Users/nidin/workspace/xdata/src/xdata/utils/CompressionAlgorithm.ts","/Users/nidin/workspace/xdata/src/xdata/utils/DataArray.ts","/Users/nidin/workspace/xdata/src/xdata/utils/LZMAHelper.ts","/Users/nidin/workspace/xdata/src/xdata/utils/MEMORY.ts","/Users/nidin/workspace/xdata/external%20%22tslib%22"],"names":["root","factory","exports","module","define","amd","global","hotDownloadUpdateChunk","chunkId","chunk","require","hotCurrentHash","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","moduleId","Object","prototype","hasOwnProperty","call","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","id","modules","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","installedModules","__webpack_require__","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","t","mode","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","accept","dep","callback","undefined","i","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","status","l","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","newStatus","hotDeferred","hotUpdateNewHash","toModuleId","Error","update","Promise","resolve","hotDownloadManifest","c","h","promise","reject","deferred","result","outdatedModules","options","cb","j","getAffectedStuff","updateModuleId","outdatedDependencies","queue","map","chain","queueItem","pop","type","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","slice","disposeHandlers","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","p","s","low","high","this","_h","toString","_hd","_l","_ld","_value","Number","numBits","probs","Uint16Array","init","INIT_PROBS","decode","rc","decodeBit","reverseDecode","BitTreeReverseDecode","constructArray","len","vec","BitTreeDecoder","decoder","PROB_INIT_VAL","offset","symbol","bit","header","Uint8Array","decodeProperties","unpackSize","unpackSizeDefined","markerIsMandatory","rangeDec","inStream","res","LZMA","LZMA_RES_ERROR","LZMA_RES_FINISHED_WITHOUT_MARKER","LZMA_RES_FINISHED_WITH_MARKER","outWindow","out_pos","corrupted","log","outStream","LZMA_DIC_MIN","kNumBitModelTotalBits","kNumMoveBits","kNumPosBitsMax","kNumStates","kNumLenToPosStates","kNumAlignBits","kStartPosModelIndex","kEndPosModelIndex","kNumFullDistances","kMatchMinLen","lowCoder","midCoder","highCoder","choice","posState","posSlotDecoder","alignDecoder","posDecoders","isMatch","isRep","isRepG0","isRepG1","isRepG2","isRep0Long","lenDecoder","repLenDecoder","loc1","getUint32","matchBitI","getUint16","matchByteI","bitI","symbolI","prevByteI","litStateI","initLiterals","initDist","dictSize","createLiterals","litProbs","lc","lp","num","decodeLiteral","state","rep0","u16","isEmpty","getByte","totalPos","probsOffset","putByte","decodeDistance","lenState","posSlot","numDirectBits","u32","decodeDirectBits","properties","prop","pb","dictSizeInProperties","updateState_Literal","updateState_ShortRep","updateState_Rep","updateState_Match","ArrayBuffer","rep1","rep2","rep3","isFinishedOK","dist","checkDistance","isError","copyMatch","buf","pos","size","isFull","rangeI","codeI","loc2","in_pos","U32","Uint32Array","U16","normalize","RangeDecoder","kTopValue","prob","index","buffer","bitsPending","readBits","bits","bitBuffer","partial","bitsConsumed","_byte","position","Math","min","readUnsignedByte","writeBits","writeByte","resetBitsPending","calculateMaxBits","signed","values","vmax","svalue","BUFFER_EXT_SIZE","array","EOF_byte","EOF_code_point","write_position","byteLength","DataView","_position","endian","ByteArray","BIG_ENDIAN","byteOffset","validate","validateBuffer","clear","getArray","setArray","setBuffer","readBoolean","SIZE_OF_BOOLEAN","getUint8","readByte","SIZE_OF_INT8","getInt8","readBytes","_bytes","createNewBuffer","bytesAvailable","setUint8","dataView","bufferOffset","readDouble","SIZE_OF_FLOAT64","getFloat64","LITTLE_ENDIAN","readFloat","SIZE_OF_FLOAT32","getFloat32","readInt","SIZE_OF_INT32","getInt32","readInt64","SIZE_OF_UINT32","readMultiByte","charSet","readShort","SIZE_OF_INT16","getInt16","SIZE_OF_UINT8","readUnsignedInt","readVariableSizedUnsignedInt","readU16VX","readUnsignedInt64","readUnsignedShort","SIZE_OF_UINT16","readUTF","readUTFBytes","decodeUTF8","readStandardString","str","String","fromCharCode","readStringTillNull","keepEvenByte","writeBoolean","setInt8","writeUnsignedByte","writeBytes","tmp_data","writeDouble","setFloat64","writeFloat","setFloat32","writeInt","setInt32","writeMultiByte","writeShort","setInt16","writeUnsignedShort","setUint16","writeUnsignedInt","setUint32","writeUTF","utf8bytes","encodeUTF8","writeUint8Array","writeUTFBytes","writeUint16Array","writeUint32Array","writeInt8Array","writeInt16Array","writeInt32Array","writeFloat32Array","writeFloat64Array","readUint8Array","readUint16Array","readUint32Array","readInt8Array","Int8Array","readInt16Array","Int16Array","readInt32Array","Int32Array","tmp","readFloat32Array","Float32Array","readFloat64Array","Float64Array","codePoints","stringToCodePoints","outputBytes","code_point","inRange","encoderError","count","div","pow","temp","utf8_code_point","utf8_bytes_needed","utf8_bytes_seen","utf8_lower_boundary","decoderError","cp","lower_boundary","fatal","opt_code_point","max","floor","string","cps","charCodeAt","SIZE_OF_INT64","SIZE_OF_UINT64","DEFLATE","ZLIB","compress","algorithm","decompressBuffer","decodeBuffer","decompress","compressAsync","decompressAsync","decodeAsync","_data","deflate","inflate","readBytesAsByteArray","readBytesAsDataArray","DataArray","readObject","writeObject","workerScript","LZMAHelper","decoderAsync","terminate","enableAsync","Worker","onmessage","receivedData","command","ENCODE","DECODE","encode","encodeAsync","_callback","postMessage","allocateUint8","MEMORY","u8","allocateUint16","allocateUint32","u8Index","u16Index","u32Index"],"mappings":"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","file":"core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(global, function() {\nreturn "," \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar chunk = require(\"./\" + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\");\n \t\thotAddUpdateChunk(chunk.id, chunk.modules);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest() {\n \t\ttry {\n \t\t\tvar update = require(\"./\" + \"\" + hotCurrentHash + \".hot-update.json\");\n \t\t} catch (e) {\n \t\t\treturn Promise.resolve();\n \t\t}\n \t\treturn Promise.resolve(update);\n \t}\n\n \t//eslint-disable-next-line no-unused-vars\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"a39b96c52978758eeae3\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"core\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n \t\t\t\t// removed self-accepted modules should not be required\n \t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire\n \t\t\t) {\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(1)(__webpack_require__.s = 1);\n","/**\n * Created by Nidin Vinayakan on 16-02-2016.\n */\nexport * from \"./xdata/utils/ByteArray\";\nexport * from \"./xdata/utils/BitArray\";\nexport * from \"./xdata/utils/DataArray\";\n","/**\n * JavaScript Int64\n * version : 0.1\n * @author Nidin Vinayakan | nidinthb@gmail.com\n *\n */\nexport class Int64 {\n  public low: number;\n  public high: number;\n  public _value!: number;\n\n  constructor(low: number, high: number) {\n    this.low = low;\n    this.high = high;\n  }\n\n  public value(): number {\n    // this._value = (this.low | (this.high << 32));\n    let _h: string = this.high.toString(16);\n    const _hd: number = 8 - _h.length;\n    if (_hd > 0) {\n      for (let i = 0; i < _hd; i++) {\n        _h = `0${_h}`;\n      }\n    }\n    let _l: string = this.low.toString(16);\n    const _ld: number = 8 - _l.length;\n    if (_ld > 0) {\n      for (let i = 0; i < _ld; i++) {\n        _l = `0${_l}`;\n      }\n    }\n    this._value = Number(`0x${_h + _l}`);\n    return this._value;\n  }\n}\n","/**\n * JavaScript UInt64\n * version : 0.1\n * @author Nidin Vinayakan | nidinthb@gmail.com\n *\n */\nexport class UInt64 {\n  public low: number;\n  public high: number;\n  public _value!: number;\n\n  constructor(low: number = 0, high: number = 0) {\n    this.low = low;\n    this.high = high;\n  }\n\n  public value(): number {\n    // this._value = (this.low | (this.high << 32));\n    let _h: string = this.high.toString(16);\n    const _hd: number = 8 - _h.length;\n    if (_hd > 0) {\n      for (let i = 0; i < _hd; i++) {\n        _h = `0${_h}`;\n      }\n    }\n    let _l: string = this.low.toString(16);\n    const _ld: number = 8 - _l.length;\n    if (_ld > 0) {\n      for (let i = 0; i < _ld; i++) {\n        _l = `0${_l}`;\n      }\n    }\n    this._value = Number(`0x${_h + _l}`);\n    return this._value;\n  }\n}\n","import { LZMA } from \"./LZMA\";\nimport { RangeDecoder } from \"./RangeDecoder\";\n/**\n * LZMA Decoder\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\nexport class BitTreeDecoder {\n  public probs: Uint16Array;\n  private numBits: number;\n\n  constructor(numBits: number) {\n    this.numBits = numBits;\n    this.probs = new Uint16Array(1 << this.numBits);\n  }\n\n  public init(): void {\n    LZMA.INIT_PROBS(this.probs);\n  }\n\n  public decode(rc: RangeDecoder): number {\n    let m: number = 1; //Uint16\n    for (let i: number = 0; i < this.numBits; i++)\n      m = (m << 1) + rc.decodeBit(this.probs, m);\n    return m - (1 << this.numBits);\n  }\n\n  public reverseDecode(rc: RangeDecoder): number {\n    return LZMA.BitTreeReverseDecode(this.probs, this.numBits, rc);\n  }\n\n  static constructArray(numBits: number, len: number): Array<BitTreeDecoder> {\n    const vec: BitTreeDecoder[] = [];\n    for (let i: number = 0; i < len; i++) {\n      vec[i] = new BitTreeDecoder(numBits);\n    }\n    return vec;\n  }\n}\n","import { LzmaDecoder } from \"./LzmaDecoder\";\nimport { RangeDecoder } from \"./RangeDecoder\";\n\n/**\n * LZMA Decoder\n * @author Nidin Vinayakan | nidinthb@gmail.com\n *\n */\n\nexport class LZMA {\n  static LZMA_DIC_MIN: number = 1 << 12;\n  static LZMA_RES_ERROR: number = 0;\n  static LZMA_RES_FINISHED_WITH_MARKER: number = 1;\n  static LZMA_RES_FINISHED_WITHOUT_MARKER: number = 2;\n  static kNumBitModelTotalBits: number = 11;\n  static kNumMoveBits: number = 5;\n  static PROB_INIT_VAL = (1 << LZMA.kNumBitModelTotalBits) / 2; //1024\n  static kNumPosBitsMax: number = 4;\n\n  static kNumStates: number = 12;\n  static kNumLenToPosStates: number = 4;\n  static kNumAlignBits: number = 4;\n  static kStartPosModelIndex: number = 4;\n  static kEndPosModelIndex: number = 14;\n  static kNumFullDistances: number = 1 << (LZMA.kEndPosModelIndex >>> 1);\n  static kMatchMinLen: number = 2;\n\n  public decoder: LzmaDecoder;\n  public data!: Uint8Array;\n  public ucdata!: Uint8Array;\n\n  static INIT_PROBS(p: Uint16Array): void {\n    for (let i: number = 0; i < p.length; i++) {\n      p[i] = this.PROB_INIT_VAL;\n    }\n  }\n\n  static BitTreeReverseDecode(\n    probs: Uint16Array,\n    numBits: number,\n    rc: RangeDecoder,\n    offset: number = 0\n  ): number {\n    let m: number = 1;\n    let symbol: number = 0;\n    for (let i: number = 0; i < numBits; i++) {\n      let bit: number = rc.decodeBit(probs, offset + m);\n      m <<= 1;\n      m += bit;\n      symbol |= bit << i;\n    }\n    return symbol;\n  }\n\n  constructor() {\n    this.decoder = new LzmaDecoder();\n  }\n\n  public decode(data: Uint8Array): Uint8Array {\n    this.data = data;\n    //let header:Uint8Array = data.readUint8Array(13);\n    let header: Uint8Array = new Uint8Array(13);\n    let i: number; //int\n    for (i = 0; i < 13; i++) {\n      header[i] = data[i];\n    }\n\n    this.decoder.decodeProperties(header);\n\n    //console.log(\"\\nlc=\" + this.decoder.lc + \", lp=\" + this.decoder.lp + \", pb=\" + this.decoder.pb);\n    //console.log(\"\\nDictionary Size in properties = \" + this.decoder.dictSizeInProperties);\n    //console.log(\"\\nDictionary Size for decoding  = \" + this.decoder.dictSize);\n    let unpackSize: number = 0; //UInt64\n    let unpackSizeDefined: boolean = false;\n    for (i = 0; i < 8; i++) {\n      let b: number = header[5 + i];\n      if (b !== 0xff) {\n        unpackSizeDefined = true;\n      }\n      unpackSize |= b << (8 * i);\n    }\n\n    this.decoder.markerIsMandatory = !unpackSizeDefined;\n\n    //console.log(\"\\n\");\n    if (unpackSizeDefined) {\n      //console.log(\"Uncompressed Size : \" + unpackSize + \" bytes\");\n    } else {\n      //console.log(\"End marker is expected\\n\");\n    }\n    this.decoder.rangeDec.inStream = data;\n    //console.log(\"\\n\");\n\n    this.decoder.create();\n    // we support the streams that have uncompressed size and marker.\n    let res: number = this.decoder.decode(unpackSizeDefined, unpackSize); //int\n\n    //console.log(\"Read    \", this.decoder.rangeDec.in_pos);\n    //console.log(\"Written \", this.decoder.outWindow.out_pos);\n\n    if (res === LZMA.LZMA_RES_ERROR) {\n      throw \"LZMA decoding error\";\n    } else if (res === LZMA.LZMA_RES_FINISHED_WITHOUT_MARKER) {\n      //console.log(\"Finished without end marker\");\n    } else if (res === LZMA.LZMA_RES_FINISHED_WITH_MARKER) {\n      if (unpackSizeDefined) {\n        if (this.decoder.outWindow.out_pos !== unpackSize) {\n          throw \"Finished with end marker before than specified size\";\n        }\n        //console.log(\"Warning: \");\n      }\n      //console.log(\"Finished with end marker\");\n    } else {\n      throw \"Internal Error\";\n    }\n\n    //console.log(\"\\n\");\n\n    if (this.decoder.rangeDec.corrupted) {\n      console.log(\"\\nWarning: LZMA stream is corrupted\\n\");\n    }\n    return this.decoder.outWindow.outStream;\n  }\n}\n","import { BitTreeDecoder } from \"./BitTreeDecoder\";\nimport { LZMA } from \"./LZMA\";\nimport { RangeDecoder } from \"./RangeDecoder\";\n/**\n * LZMA Decoder\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\n\nexport class LenDecoder {\n  private choice!: Uint16Array;\n  private lowCoder: Array<BitTreeDecoder>; //3\n  private midCoder: Array<BitTreeDecoder>; //3\n  private highCoder: BitTreeDecoder; //8\n\n  constructor() {\n    this.lowCoder = BitTreeDecoder.constructArray(3, 1 << LZMA.kNumPosBitsMax);\n    this.midCoder = BitTreeDecoder.constructArray(3, 1 << LZMA.kNumPosBitsMax);\n    this.highCoder = new BitTreeDecoder(8);\n  }\n\n  public init(): void {\n    this.choice = new Uint16Array([LZMA.PROB_INIT_VAL, LZMA.PROB_INIT_VAL]);\n    this.highCoder.init();\n    for (let i: number = 0; i < 1 << LZMA.kNumPosBitsMax; i++) {\n      this.lowCoder[i].init();\n      this.midCoder[i].init();\n    }\n  }\n\n  public decode(rc: RangeDecoder, posState: number): number {\n    if (rc.decodeBit(this.choice, 0) === 0) {\n      return this.lowCoder[posState].decode(rc);\n    }\n    if (rc.decodeBit(this.choice, 1) === 0) {\n      return 8 + this.midCoder[posState].decode(rc);\n    }\n    return 16 + this.highCoder.decode(rc);\n  }\n}\n","import { RangeDecoder } from \"./RangeDecoder\";\nimport { OutWindow } from \"./OutWindow\";\nimport { BitTreeDecoder } from \"./BitTreeDecoder\";\nimport { LenDecoder } from \"./LenDecoder\";\nimport { LZMA } from \"./LZMA\";\nimport { MEMORY } from \"../utils/MEMORY\";\n/**\n * LZMA Decoder\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\n\nexport class LzmaDecoder {\n  // Public\n  public markerIsMandatory!: boolean;\n  public rangeDec: RangeDecoder; // RangeDecoder\n  public outWindow: OutWindow; // OutWindow\n  public lc!: number;\n  public pb!: number;\n  public lp!: number; // unsigned byte\n  public dictSize!: number; // UInt32\n  public dictSizeInProperties!: number; // UInt32\n\n  // Private\n  private litProbs!: Uint16Array;\n\n  private posSlotDecoder: BitTreeDecoder[];\n  private alignDecoder: BitTreeDecoder;\n  private posDecoders: Uint16Array;\n\n  private isMatch: Uint16Array;\n  private isRep: Uint16Array;\n  private isRepG0: Uint16Array;\n  private isRepG1: Uint16Array;\n  private isRepG2: Uint16Array;\n  private isRep0Long: Uint16Array;\n\n  private lenDecoder: LenDecoder;\n  private repLenDecoder: LenDecoder;\n\n  // Local registers\n  private loc1!: number;\n  private matchBitI!: number;\n  private matchByteI!: number;\n  private bitI!: number;\n  private symbolI!: number;\n  private prevByteI!: number;\n  private litStateI!: number;\n\n  constructor() {\n    this.posSlotDecoder = BitTreeDecoder.constructArray(\n      6,\n      LZMA.kNumLenToPosStates\n    ); //6\n    this.alignDecoder = new BitTreeDecoder(LZMA.kNumAlignBits);\n    this.posDecoders = new Uint16Array(\n      1 + LZMA.kNumFullDistances - LZMA.kEndPosModelIndex\n    );\n\n    this.isMatch = new Uint16Array(LZMA.kNumStates << LZMA.kNumPosBitsMax);\n    this.isRep = new Uint16Array(LZMA.kNumStates);\n    this.isRepG0 = new Uint16Array(LZMA.kNumStates);\n    this.isRepG1 = new Uint16Array(LZMA.kNumStates);\n    this.isRepG2 = new Uint16Array(LZMA.kNumStates);\n    this.isRep0Long = new Uint16Array(LZMA.kNumStates << LZMA.kNumPosBitsMax);\n\n    this.lenDecoder = new LenDecoder();\n    this.repLenDecoder = new LenDecoder();\n    this.rangeDec = new RangeDecoder();\n    this.outWindow = new OutWindow();\n  }\n\n  public init(): void {\n    this.loc1 = MEMORY.getUint32() | 0;\n    this.matchBitI = MEMORY.getUint16() | 0;\n    this.matchByteI = MEMORY.getUint16() | 0;\n    this.bitI = MEMORY.getUint16() | 0;\n    this.symbolI = MEMORY.getUint16() | 0;\n    this.prevByteI = MEMORY.getUint16() | 0;\n    this.litStateI = MEMORY.getUint16() | 0;\n\n    this.initLiterals();\n    this.initDist();\n\n    LZMA.INIT_PROBS(this.isMatch);\n    LZMA.INIT_PROBS(this.isRep);\n    LZMA.INIT_PROBS(this.isRepG0);\n    LZMA.INIT_PROBS(this.isRepG1);\n    LZMA.INIT_PROBS(this.isRepG2);\n    LZMA.INIT_PROBS(this.isRep0Long);\n\n    this.lenDecoder.init();\n    this.repLenDecoder.init();\n  }\n\n  public create(): void {\n    this.outWindow.create(this.dictSize);\n    this.createLiterals();\n  }\n\n  //Private\n  private createLiterals(): void {\n    this.litProbs = new Uint16Array(0x300 << (this.lc + this.lp));\n  }\n\n  private initLiterals(): void {\n    let num: number = 0x300 << (this.lc + this.lp); //UInt32\n    for (let i: number = 0; i < num; i++) {\n      this.litProbs[i] = LZMA.PROB_INIT_VAL;\n    }\n  }\n\n  private decodeLiteral(state: number, rep0: number): void {\n    //unsigned , UInt32\n    MEMORY.u16[this.prevByteI] = 0; //unsigned byte\n    if (!this.outWindow.isEmpty())\n      MEMORY.u16[this.prevByteI] = this.outWindow.getByte(1);\n\n    MEMORY.u16[this.symbolI] = 1;\n    MEMORY.u16[this.litStateI] =\n      ((this.outWindow.totalPos & ((1 << this.lp) - 1)) << this.lc) +\n      (MEMORY.u16[this.prevByteI] >>> (8 - this.lc));\n    let probsOffset: number = (0x300 * MEMORY.u16[this.litStateI]) | 0;\n\n    if (state >= 7) {\n      MEMORY.u16[this.matchByteI] = this.outWindow.getByte(rep0 + 1);\n      do {\n        MEMORY.u16[this.matchBitI] = (MEMORY.u16[this.matchByteI] >>> 7) & 1;\n        MEMORY.u16[this.matchByteI] <<= 1;\n        MEMORY.u16[this.bitI] = this.rangeDec.decodeBit(\n          this.litProbs,\n          probsOffset +\n            ((1 + MEMORY.u16[this.matchBitI]) << 8) +\n            MEMORY.u16[this.symbolI]\n        );\n        MEMORY.u16[this.symbolI] =\n          (MEMORY.u16[this.symbolI] << 1) | MEMORY.u16[this.bitI];\n        if (MEMORY.u16[this.matchBitI] !== MEMORY.u16[this.bitI]) break;\n      } while (MEMORY.u16[this.symbolI] < 0x100);\n    }\n    while (MEMORY.u16[this.symbolI] < 0x100) {\n      MEMORY.u16[this.symbolI] =\n        (MEMORY.u16[this.symbolI] << 1) |\n        this.rangeDec.decodeBit(\n          this.litProbs,\n          probsOffset + MEMORY.u16[this.symbolI]\n        );\n    }\n    this.outWindow.putByte(MEMORY.u16[this.symbolI] - 0x100);\n  }\n\n  private decodeDistance(len: number): number {\n    //unsigned byte\n    let lenState: number = len; //unsigned byte\n    if (lenState > LZMA.kNumLenToPosStates - 1)\n      lenState = LZMA.kNumLenToPosStates - 1;\n\n    let posSlot = this.posSlotDecoder[lenState].decode(this.rangeDec); //unsigned byte\n    if (posSlot < 4) return posSlot;\n\n    let numDirectBits = (posSlot >>> 1) - 1; //unsigned byte\n    MEMORY.u32[this.loc1] = (2 | (posSlot & 1)) << numDirectBits; //UInt32\n    if (posSlot < LZMA.kEndPosModelIndex) {\n      MEMORY.u32[this.loc1] += LZMA.BitTreeReverseDecode(\n        this.posDecoders,\n        numDirectBits,\n        this.rangeDec,\n        MEMORY.u32[this.loc1] - posSlot\n      );\n    } else {\n      MEMORY.u32[this.loc1] +=\n        this.rangeDec.decodeDirectBits(numDirectBits - LZMA.kNumAlignBits) <<\n        LZMA.kNumAlignBits;\n      MEMORY.u32[this.loc1] += this.alignDecoder.reverseDecode(this.rangeDec);\n    }\n    return MEMORY.u32[this.loc1];\n  }\n\n  private initDist(): void {\n    for (let i = 0; i < LZMA.kNumLenToPosStates; i++) {\n      this.posSlotDecoder[i].init();\n    }\n    this.alignDecoder.init();\n    LZMA.INIT_PROBS(this.posDecoders);\n  }\n\n  public decodeProperties(properties: Uint8Array): void {\n    let prop = new Uint8Array(4);\n    prop[0] = properties[0];\n    if (prop[0] >= 9 * 5 * 5) {\n      throw \"Incorrect LZMA properties\";\n    }\n    prop[1] = prop[0] % 9;\n    prop[0] /= 9;\n    prop[2] = prop[0] / 5;\n    prop[3] = prop[0] % 5;\n\n    this.lc = prop[1];\n    this.pb = prop[2];\n    this.lp = prop[3];\n\n    this.dictSizeInProperties = 0;\n    for (let i: number = 0; i < 4; i++) {\n      this.dictSizeInProperties |= properties[i + 1] << (8 * i);\n    }\n\n    this.dictSize = this.dictSizeInProperties;\n\n    if (this.dictSize < LZMA.LZMA_DIC_MIN) {\n      this.dictSize = LZMA.LZMA_DIC_MIN;\n    }\n  }\n\n  private updateState_Literal(state: number): number {\n    if (state < 4) return 0;\n    else if (state < 10) return state - 3;\n    else return state - 6;\n  }\n\n  private updateState_ShortRep(state: number): number {\n    return state < 7 ? 9 : 11;\n  }\n\n  private updateState_Rep(state: number): number {\n    return state < 7 ? 8 : 11;\n  }\n\n  private updateState_Match(state: number): number {\n    return state < 7 ? 7 : 10;\n  }\n\n  public decode(unpackSizeDefined: boolean, unpackSize: number): number {\n    //UInt64\n    this.init();\n    this.rangeDec.init();\n\n    if (unpackSizeDefined) {\n      this.outWindow.outStream = new Uint8Array(new ArrayBuffer(unpackSize));\n    }\n\n    let rep0 = 0,\n      rep1 = 0,\n      rep2 = 0,\n      rep3 = 0; //UInt32\n    let state = 0; //unsigned byte\n\n    for (;;) {\n      if (unpackSizeDefined && unpackSize === 0 && !this.markerIsMandatory) {\n        if (this.rangeDec.isFinishedOK()) {\n          return LZMA.LZMA_RES_FINISHED_WITHOUT_MARKER;\n        }\n      }\n\n      let posState = this.outWindow.totalPos & ((1 << this.pb) - 1);\n\n      if (\n        this.rangeDec.decodeBit(\n          this.isMatch,\n          (state << LZMA.kNumPosBitsMax) + posState\n        ) === 0\n      ) {\n        if (unpackSizeDefined && unpackSize === 0) {\n          return LZMA.LZMA_RES_ERROR;\n        }\n        this.decodeLiteral(state, rep0);\n        state = this.updateState_Literal(state);\n        unpackSize--;\n        continue;\n      }\n\n      let len;\n\n      if (this.rangeDec.decodeBit(this.isRep, state) !== 0) {\n        if (unpackSizeDefined && unpackSize === 0) {\n          return LZMA.LZMA_RES_ERROR;\n        }\n        if (this.outWindow.isEmpty()) {\n          return LZMA.LZMA_RES_ERROR;\n        }\n        if (this.rangeDec.decodeBit(this.isRepG0, state) === 0) {\n          if (\n            this.rangeDec.decodeBit(\n              this.isRep0Long,\n              (state << LZMA.kNumPosBitsMax) + posState\n            ) === 0\n          ) {\n            state = this.updateState_ShortRep(state);\n            this.outWindow.putByte(this.outWindow.getByte(rep0 + 1));\n            unpackSize--;\n            continue;\n          }\n        } else {\n          let dist: number;\n          if (this.rangeDec.decodeBit(this.isRepG1, state) === 0) {\n            dist = rep1;\n          } else {\n            if (this.rangeDec.decodeBit(this.isRepG2, state) === 0) {\n              dist = rep2;\n            } else {\n              dist = rep3;\n              rep3 = rep2;\n            }\n            rep2 = rep1;\n          }\n          rep1 = rep0;\n          rep0 = dist;\n        }\n        len = this.repLenDecoder.decode(this.rangeDec, posState);\n        state = this.updateState_Rep(state);\n      } else {\n        rep3 = rep2;\n        rep2 = rep1;\n        rep1 = rep0;\n        len = this.lenDecoder.decode(this.rangeDec, posState);\n        state = this.updateState_Match(state);\n        rep0 = this.decodeDistance(len);\n        if (rep0 === 0xffffffff) {\n          return this.rangeDec.isFinishedOK()\n            ? LZMA.LZMA_RES_FINISHED_WITH_MARKER\n            : LZMA.LZMA_RES_ERROR;\n        }\n\n        if (unpackSizeDefined && unpackSize === 0) {\n          return LZMA.LZMA_RES_ERROR;\n        }\n        if (rep0 >= this.dictSize || !this.outWindow.checkDistance(rep0)) {\n          return LZMA.LZMA_RES_ERROR;\n        }\n      }\n      len += LZMA.kMatchMinLen;\n      let isError: boolean = false;\n      if (unpackSizeDefined && unpackSize < len) {\n        len = unpackSize;\n        isError = true;\n      }\n      this.outWindow.copyMatch(rep0 + 1, len);\n      unpackSize -= len;\n      if (isError) {\n        return LZMA.LZMA_RES_ERROR;\n      }\n    }\n  }\n}\n","/**\n * LZMA Decoder\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\n\nexport class OutWindow {\n  public totalPos!: number;\n  public outStream!: Uint8Array;\n\n  private buf!: Uint8Array;\n  private pos!: number;\n  public out_pos: number;\n  private size!: number;\n  private isFull!: boolean;\n\n  constructor() {\n    this.out_pos = 0;\n  }\n\n  public create(\n    dictSize: number //UInt32\n  ) {\n    this.buf = new Uint8Array(dictSize);\n    this.pos = 0;\n    this.size = dictSize;\n    this.isFull = false;\n    this.totalPos = 0;\n  }\n\n  public putByte(b: number) {\n    this.totalPos++;\n    this.buf[this.pos++] = b;\n    if (this.pos === this.size) {\n      this.pos = 0;\n      this.isFull = true;\n    }\n    //this.outStream.writeUnsignedByte(b);\n    this.outStream[this.out_pos++] = b;\n  }\n\n  public getByte(\n    dist: number //UInt32\n  ) {\n    return this.buf[\n      dist <= this.pos ? this.pos - dist : this.size - dist + this.pos\n    ];\n  }\n\n  public copyMatch(\n    dist: number,\n    len: number //UInt32 ,unsigned byte\n  ) {\n    for (; len > 0; len--) {\n      this.putByte(this.getByte(dist));\n    }\n  }\n\n  public checkDistance(dist: number): boolean {\n    //UInt32\n    return dist <= this.pos || this.isFull;\n  }\n\n  public isEmpty(): boolean {\n    return this.pos === 0 && !this.isFull;\n  }\n}\n","/**\n * LZMA Decoder\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\n\nexport class RangeDecoder {\n  static kTopValue: number = 1 << 24;\n\n  public inStream!: Uint8Array;\n  public corrupted!: boolean;\n\n  public in_pos: number;\n  private rangeI: number = 0;\n  private codeI: number = 1;\n  private loc1: number = 2;\n  private loc2: number = 3;\n  private U32!: Uint32Array;\n  private U16!: Uint16Array;\n\n  constructor() {\n    this.in_pos = 13;\n  }\n\n  public isFinishedOK(): boolean {\n    return this.U32[this.codeI] === 0;\n  }\n\n  public init(): void {\n    this.U32 = new Uint32Array(4);\n    this.U16 = new Uint16Array(4);\n    this.corrupted = false;\n\n    if (this.inStream[this.in_pos++] !== 0) {\n      this.corrupted = true;\n    }\n\n    this.U32[this.rangeI] = 0xffffffff;\n    this.U32[this.codeI] = 0;\n\n    for (let i: number = 0; i < 4; i++) {\n      this.U32[this.codeI] =\n        (this.U32[this.codeI] << 8) | this.inStream[this.in_pos++];\n    }\n\n    if (this.U32[this.codeI] === this.U32[this.rangeI]) {\n      this.corrupted = true;\n    }\n  }\n\n  public normalize() {\n    if (this.U32[this.rangeI] < RangeDecoder.kTopValue) {\n      this.U32[this.rangeI] <<= 8;\n      this.U32[this.codeI] =\n        (this.U32[this.codeI] << 8) | this.inStream[this.in_pos++];\n    }\n  }\n\n  public decodeDirectBits(numBits: number): number {\n    this.U32[this.loc1] = 0; //UInt32\n    do {\n      this.U32[this.rangeI] >>>= 1;\n      this.U32[this.codeI] -= this.U32[this.rangeI];\n      this.U32[this.loc2] = 0 - (this.U32[this.codeI] >>> 31);\n      this.U32[this.codeI] += this.U32[this.rangeI] & this.U32[this.loc2];\n\n      if (this.U32[this.codeI] === this.U32[this.rangeI]) {\n        this.corrupted = true;\n      }\n\n      this.normalize();\n      this.U32[this.loc1] <<= 1;\n      this.U32[this.loc1] += this.U32[this.loc2] + 1;\n    } while (--numBits);\n    return this.U32[this.loc1];\n  }\n\n  public decodeBit(prob: Uint16Array, index: number): number {\n    this.U16[0] = prob[index];\n    //bound\n    this.U32[2] = (this.U32[0] >>> 11) * this.U16[0];\n    //let symbol:number;\n    if (this.U32[1] < this.U32[2]) {\n      this.U16[0] += ((1 << 11) - this.U16[0]) >>> 5;\n      this.U32[0] = this.U32[2];\n      this.U16[1] = 0;\n    } else {\n      //v -= v >>> LZMA.kNumMoveBits;\n      this.U16[0] -= this.U16[0] >>> 5;\n      this.U32[1] -= this.U32[2];\n      this.U32[0] -= this.U32[2];\n      this.U16[1] = 1;\n    }\n    prob[index] = this.U16[0];\n    //this.normalize();\n    if (this.U32[0] < 16777216) {\n      this.U32[0] <<= 8;\n      this.U32[1] = (this.U32[1] << 8) | this.inStream[this.in_pos++];\n    }\n    return this.U16[1];\n  }\n\n  /*public decodeBit(prob:Uint16Array,index:number):number\n     {\n     let v = prob[index];\n     //bound\n     //this.U32[this.loc1] = (this.U32[this.rangeI] >>> 11) * v;\n     this.U32[this.loc1] = (this.U32[this.rangeI] >>> 11) * v;\n     let symbol:number;\n     if (this.U32[this.codeI] < this.U32[this.loc1])\n     {\n     v += ((1 << 11) - v) >>> 5;\n     this.U32[this.rangeI] = this.U32[this.loc1];\n     symbol = 0;\n     }\n     else\n     {\n     //v -= v >>> LZMA.kNumMoveBits;\n     v -= v >>> 5;\n     this.U32[this.codeI] -= this.U32[this.loc1];\n     this.U32[this.rangeI] -= this.U32[this.loc1];\n     symbol = 1;\n     }\n     prob[index] = v;\n     //this.normalize();\n     if (this.U32[this.rangeI] < 16777216)\n     {\n     this.U32[this.rangeI] <<= 8;\n     this.U32[this.codeI] = (this.U32[this.codeI] << 8) | this.inStream[this.in_pos++];\n     }\n     return symbol;\n     }*/\n}\n","import { ByteArray } from \"./ByteArray\";\n/**\n * JavaScript BitArray\n * version : 0.2\n * @author Nidin Vinayakan | nidinthb@gmail.com\n *\n * Utility to read bits from ByteArray\n */\nexport class BitArray extends ByteArray {\n  private bitsPending: number = 0;\n\n  constructor(buffer?: ArrayBuffer) {\n    super(buffer);\n  }\n\n  public readBits(bits: number, bitBuffer: number = 0): number {\n    if (bits === 0) {\n      return bitBuffer;\n    }\n    let partial: number;\n    let bitsConsumed: number;\n    if (this.bitsPending > 0) {\n      const _byte: number =\n        // @ts-ignore\n        this[this.position - 1] & (0xff >> (8 - this.bitsPending));\n      bitsConsumed = Math.min(this.bitsPending, bits);\n      this.bitsPending -= bitsConsumed;\n      partial = _byte >> this.bitsPending;\n    } else {\n      bitsConsumed = Math.min(8, bits);\n      this.bitsPending = 8 - bitsConsumed;\n      partial = this.readUnsignedByte() >> this.bitsPending;\n    }\n    bits -= bitsConsumed;\n    bitBuffer = (bitBuffer << bitsConsumed) | partial;\n    return bits > 0 ? this.readBits(bits, bitBuffer) : bitBuffer;\n  }\n\n  public writeBits(bits: number, value: number) {\n    if (bits === 0) {\n      return;\n    }\n    value &= 0xffffffff >>> (32 - bits);\n    let bitsConsumed: number;\n    if (this.bitsPending > 0) {\n      if (this.bitsPending > bits) {\n        // @ts-ignore\n        this[this.position - 1] |= value << (this.bitsPending - bits);\n        bitsConsumed = bits;\n        this.bitsPending -= bits;\n      } else if (this.bitsPending === bits) {\n        // @ts-ignore\n        this[this.position - 1] |= value;\n        bitsConsumed = bits;\n        this.bitsPending = 0;\n      } else {\n        // @ts-ignore\n        this[this.position - 1] |= value >> (bits - this.bitsPending);\n        bitsConsumed = this.bitsPending;\n        this.bitsPending = 0;\n      }\n    } else {\n      bitsConsumed = Math.min(8, bits);\n      this.bitsPending = 8 - bitsConsumed;\n      this.writeByte((value >> (bits - bitsConsumed)) << this.bitsPending);\n    }\n    bits -= bitsConsumed;\n    if (bits > 0) {\n      this.writeBits(bits, value);\n    }\n  }\n\n  public resetBitsPending() {\n    this.bitsPending = 0;\n  }\n\n  static calculateMaxBits(signed: boolean, values: number[]): number {\n    let b: number = 0;\n    let vmax: number = -2147483648; // int.MIN_VALUE;\n    if (!signed) {\n      for (let i: number = 0; i < values.length; i++) {\n        b |= values[i];\n      }\n    } else {\n      for (let i: number = 0; i < values.length; i++) {\n        const svalue = values[i];\n        if (svalue >= 0) {\n          b |= svalue;\n        } else {\n          b |= ~svalue << 1;\n        }\n        if (vmax < svalue) {\n          vmax = svalue;\n        }\n      }\n    }\n    let bits: number = 0;\n    if (b > 0) {\n      bits = b.toString(2).length;\n      if (signed && vmax > 0 && vmax.toString(2).length >= bits) {\n        bits++;\n      }\n    }\n    return bits;\n  }\n}\n","import { Int64 } from \"../../ctypes/Int64\";\nimport { UInt64 } from \"../../ctypes/UInt64\";\n/**\n * JavaScript ByteArray\n * version : 0.2\n * @author Nidin Vinayakan | nidinthb@gmail.com\n *\n * ActionScript3 ByteArray implementation in JavaScript\n * limitation : size of ByteArray cannot be changed\n *\n */\nexport class ByteArray {\n  static BIG_ENDIAN: string = \"bigEndian\";\n  static LITTLE_ENDIAN: string = \"littleEndian\";\n\n  static SIZE_OF_BOOLEAN: number = 1;\n  static SIZE_OF_INT8: number = 1;\n  static SIZE_OF_INT16: number = 2;\n  static SIZE_OF_INT32: number = 4;\n  static SIZE_OF_INT64: number = 8;\n  static SIZE_OF_UINT8: number = 1;\n  static SIZE_OF_UINT16: number = 2;\n  static SIZE_OF_UINT32: number = 4;\n  static SIZE_OF_UINT64: number = 8;\n  static SIZE_OF_FLOAT32: number = 4;\n  static SIZE_OF_FLOAT64: number = 8;\n\n  private BUFFER_EXT_SIZE: number = 1024; // Buffer expansion size\n\n  public array: Uint8Array | null = null;\n  public data!: DataView;\n  private _position: number;\n  public write_position: number;\n  public endian: string;\n\n  constructor(buffer?: ArrayBuffer, offset: number = 0, length: number = 0) {\n    if (buffer === undefined) {\n      buffer = new ArrayBuffer(this.BUFFER_EXT_SIZE);\n      this.write_position = 0;\n    } else if (buffer === null) {\n      this.write_position = 0;\n    } else {\n      this.write_position = length > 0 ? length : buffer.byteLength;\n    }\n    if (buffer) {\n      this.data = new DataView(\n        buffer,\n        offset,\n        length > 0 ? length : buffer.byteLength\n      );\n    }\n    this._position = 0;\n    this.endian = ByteArray.BIG_ENDIAN;\n  }\n\n  // getter setter\n  get buffer(): ArrayBuffer {\n    return this.data.buffer;\n  }\n\n  set buffer(value: ArrayBuffer) {\n    this.data = new DataView(value);\n  }\n\n  get dataView(): DataView {\n    return this.data;\n  }\n\n  set dataView(value: DataView) {\n    this.data = value;\n    this.write_position = value.byteLength;\n  }\n\n  get phyPosition(): number {\n    return this._position + this.data.byteOffset;\n  }\n\n  get bufferOffset(): number {\n    return this.data.byteOffset;\n  }\n\n  get position(): number {\n    return this._position;\n  }\n\n  set position(value: number) {\n    if (this._position < value) {\n      if (!this.validate(this._position - value)) {\n        return;\n      }\n    }\n    this._position = value;\n    this.write_position =\n      value > this.write_position ? value : this.write_position;\n  }\n\n  get length(): number {\n    return this.write_position;\n  }\n\n  set length(value: number) {\n    this.validateBuffer(value);\n  }\n\n  get bytesAvailable(): number {\n    return this.data.byteLength - this._position;\n  }\n\n  //end\n  public clear(): void {\n    this._position = 0;\n  }\n\n  public getArray(): Uint8Array {\n    if (this.array === null) {\n      this.array = new Uint8Array(\n        this.data.buffer,\n        this.data.byteOffset,\n        this.data.byteLength\n      );\n    }\n    return this.array;\n  }\n\n  public setArray(array: Uint8Array): void {\n    this.array = array;\n    this.setBuffer(array.buffer, array.byteOffset, array.byteLength);\n  }\n\n  public setBuffer(\n    buffer: ArrayBuffer,\n    offset: number = 0,\n    length: number = 0\n  ) {\n    if (buffer) {\n      this.data = new DataView(\n        buffer,\n        offset,\n        length > 0 ? length : buffer.byteLength\n      );\n      this.write_position = length > 0 ? length : buffer.byteLength;\n    } else {\n      this.write_position = 0;\n    }\n    this._position = 0;\n  }\n\n  /**\n   * Reads a Boolean value from the byte stream. A single byte is read,\n   * and true is returned if the byte is nonzero,\n   * false otherwise.\n   * @return    Returns true if the byte is nonzero, false otherwise.\n   */\n  public readBoolean(): boolean {\n    if (!this.validate(ByteArray.SIZE_OF_BOOLEAN)) return null;\n\n    return this.data.getUint8(this.position++) !== 0;\n  }\n\n  /**\n   * Reads a signed byte from the byte stream.\n   * The returned value is in the range -128 to 127.\n   * @return    An integer between -128 and 127.\n   */\n  public readByte(): number {\n    if (!this.validate(ByteArray.SIZE_OF_INT8)) return null;\n\n    return this.data.getInt8(this.position++);\n  }\n\n  /**\n   * Reads the number of data bytes, specified by the length parameter, from the byte stream.\n   * The bytes are read into the ByteArray object specified by the bytes parameter,\n   * and the bytes are written into the destination ByteArray starting at the _position specified by offset.\n   * @param    bytes    The ByteArray object to read data into.\n   * @param    offset    The offset (_position) in bytes at which the read data should be written.\n   * @param    length    The number of bytes to read.  The default value of 0 causes all available data to be read.\n   */\n  public readBytes(\n    _bytes: ByteArray = null,\n    offset: number = 0,\n    length: number = 0,\n    createNewBuffer: boolean = false\n  ): ByteArray {\n    if (length === 0) {\n      length = this.bytesAvailable;\n    } else if (!this.validate(length)) return null;\n\n    if (createNewBuffer) {\n      _bytes =\n        _bytes === null ? new ByteArray(new ArrayBuffer(length)) : _bytes;\n      //This method is expensive\n      for (let i = 0; i < length; i++) {\n        _bytes.data.setUint8(i + offset, this.data.getUint8(this.position++));\n      }\n    } else {\n      //Offset argument ignored\n      _bytes = _bytes === null ? new ByteArray(null) : _bytes;\n      _bytes.dataView = new DataView(\n        this.data.buffer,\n        this.bufferOffset + this.position,\n        length\n      );\n      this.position += length;\n    }\n\n    return _bytes;\n  }\n\n  /**\n   * Reads an IEEE 754 double-precision (64-bit) floating-point number from the byte stream.\n   * @return    A double-precision (64-bit) floating-point number.\n   */\n  public readDouble(): number {\n    if (!this.validate(ByteArray.SIZE_OF_FLOAT64)) return null;\n\n    let value: number = this.data.getFloat64(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_FLOAT64;\n    return value;\n  }\n\n  /**\n   * Reads an IEEE 754 single-precision (32-bit) floating-point number from the byte stream.\n   * @return    A single-precision (32-bit) floating-point number.\n   */\n  public readFloat(): number {\n    if (!this.validate(ByteArray.SIZE_OF_FLOAT32)) return null;\n\n    let value: number = this.data.getFloat32(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_FLOAT32;\n    return value;\n  }\n\n  /**\n   * Reads a signed 32-bit integer from the byte stream.\n   *\n   *   The returned value is in the range -2147483648 to 2147483647.\n   * @return    A 32-bit signed integer between -2147483648 and 2147483647.\n   */\n  public readInt(): number {\n    if (!this.validate(ByteArray.SIZE_OF_INT32)) return null;\n\n    let value = this.data.getInt32(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_INT32;\n    return value;\n  }\n\n  /**\n   * Reads a signed 64-bit integer from the byte stream.\n   *\n   *   The returned value is in the range −(2^63) to 2^63 − 1\n   * @return    A 64-bit signed integer between −(2^63) to 2^63 − 1\n   */\n  public readInt64(): Int64 {\n    if (!this.validate(ByteArray.SIZE_OF_UINT32)) return null;\n\n    let low = this.data.getInt32(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_INT32;\n    let high = this.data.getInt32(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_INT32;\n    return new Int64(low, high);\n  }\n\n  /**\n   * Reads a multibyte string of specified length from the byte stream using the\n   * specified character set.\n   * @param    length    The number of bytes from the byte stream to read.\n   * @param    charSet    The string denoting the character set to use to interpret the bytes.\n   *   Possible character set strings include \"shift-jis\", \"cn-gb\",\n   *   \"iso-8859-1\", and others.\n   *   For a complete list, see Supported Character Sets.\n   *   Note: If the value for the charSet parameter\n   *   is not recognized by the current system, the application uses the system's default\n   *   code page as the character set. For example, a value for the charSet parameter,\n   *   as in myTest.readMultiByte(22, \"iso-8859-01\") that uses 01 instead of\n   *   1 might work on your development system, but not on another system.\n   *   On the other system, the application will use the system's default code page.\n   * @return    UTF-8 encoded string.\n   */\n  // @ts-ignore\n  public readMultiByte(length: number, charSet?: string): string {\n    if (!this.validate(length)) return null;\n    return \"\";\n  }\n\n  /**\n   * Reads a signed 16-bit integer from the byte stream.\n   *\n   *   The returned value is in the range -32768 to 32767.\n   * @return    A 16-bit signed integer between -32768 and 32767.\n   */\n  public readShort(): number {\n    if (!this.validate(ByteArray.SIZE_OF_INT16)) return null;\n\n    let value = this.data.getInt16(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_INT16;\n    return value;\n  }\n\n  /**\n   * Reads an unsigned byte from the byte stream.\n   *\n   *   The returned value is in the range 0 to 255.\n   * @return    A 32-bit unsigned integer between 0 and 255.\n   */\n  public readUnsignedByte(): number {\n    if (!this.validate(ByteArray.SIZE_OF_UINT8)) return null;\n\n    return this.data.getUint8(this.position++);\n  }\n\n  /**\n   * Reads an unsigned 32-bit integer from the byte stream.\n   *\n   *   The returned value is in the range 0 to 4294967295.\n   * @return    A 32-bit unsigned integer between 0 and 4294967295.\n   */\n  public readUnsignedInt(): number {\n    if (!this.validate(ByteArray.SIZE_OF_UINT32)) return null;\n\n    let value = this.data.getUint32(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT32;\n    return value;\n  }\n\n  /**\n   * Reads a variable sized unsigned integer (VX -> 16-bit or 32-bit) from the byte stream.\n   *\n   *   A VX is written as a variable length 2- or 4-byte element. If the index value is less than 65,280 (0xFF00),\n   *   then the index is written as an unsigned two-byte integer. Otherwise the index is written as an unsigned\n   *   four byte integer with bits 24-31 set. When reading an index, if the first byte encountered is 255 (0xFF),\n   *   then the four-byte form is being used and the first byte should be discarded or masked out.\n   *\n   *   The returned value is in the range  0 to 65279 or 0 to 2147483647.\n   * @return    A VX 16-bit or 32-bit unsigned integer between 0 to 65279 or 0 and 2147483647.\n   */\n  public readVariableSizedUnsignedInt(): number {\n    let value: number;\n    let c = this.readUnsignedByte();\n    if (c !== 0xff) {\n      value = c << 8;\n      c = this.readUnsignedByte();\n      value |= c;\n    } else {\n      c = this.readUnsignedByte();\n      value = c << 16;\n      c = this.readUnsignedByte();\n      value |= c << 8;\n      c = this.readUnsignedByte();\n      value |= c;\n    }\n    return value;\n  }\n\n  /**\n   * Fast read for WebGL since only Uint16 numbers are expected\n   */\n  public readU16VX(): number {\n    return (this.readUnsignedByte() << 8) | this.readUnsignedByte();\n  }\n\n  /**\n   * Reads an unsigned 64-bit integer from the byte stream.\n   *\n   *   The returned value is in the range 0 to 2^64 − 1.\n   * @return    A 64-bit unsigned integer between 0 and 2^64 − 1\n   */\n  public readUnsignedInt64(): UInt64 {\n    if (!this.validate(ByteArray.SIZE_OF_UINT32)) return null;\n\n    let low = this.data.getUint32(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT32;\n    let high = this.data.getUint32(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT32;\n    return new UInt64(low, high);\n  }\n\n  /**\n   * Reads an unsigned 16-bit integer from the byte stream.\n   *\n   *   The returned value is in the range 0 to 65535.\n   * @return    A 16-bit unsigned integer between 0 and 65535.\n   */\n  public readUnsignedShort(): number {\n    if (!this.validate(ByteArray.SIZE_OF_UINT16)) return null;\n\n    let value = this.data.getUint16(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT16;\n    return value;\n  }\n\n  /**\n   * Reads a UTF-8 string from the byte stream.  The string\n   * is assumed to be prefixed with an unsigned short indicating\n   * the length in bytes.\n   * @return    UTF-8 encoded  string.\n   */\n  public readUTF(): string {\n    if (!this.validate(ByteArray.SIZE_OF_UINT16)) return null;\n\n    let length: number = this.data.getUint16(\n      this.position,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT16;\n\n    if (length > 0) {\n      return this.readUTFBytes(length);\n    } else {\n      return \"\";\n    }\n  }\n\n  /**\n   * Reads a sequence of UTF-8 bytes specified by the length\n   * parameter from the byte stream and returns a string.\n   * @param    length    An unsigned short indicating the length of the UTF-8 bytes.\n   * @return    A string composed of the UTF-8 bytes of the specified length.\n   */\n  public readUTFBytes(length: number): string {\n    if (!this.validate(length)) return null;\n\n    let _bytes: Uint8Array = new Uint8Array(\n      this.buffer,\n      this.bufferOffset + this.position,\n      length\n    );\n    this.position += length;\n    /*let _bytes: Uint8Array = new Uint8Array(new ArrayBuffer(length));\n         for (let i = 0; i < length; i++) {\n         _bytes[i] = this.data.getUint8(this.position++);\n         }*/\n    return this.decodeUTF8(_bytes);\n  }\n\n  public readStandardString(length: number): string {\n    if (!this.validate(length)) return null;\n\n    let str: string = \"\";\n\n    for (let i = 0; i < length; i++) {\n      str += String.fromCharCode(this.data.getUint8(this.position++));\n    }\n    return str;\n  }\n\n  public readStringTillNull(keepEvenByte: boolean = true): string {\n    let str: string = \"\";\n    let num: number = 0;\n    while (this.bytesAvailable > 0) {\n      let _byte: number = this.data.getUint8(this.position++);\n      num++;\n      if (_byte !== 0) {\n        str += String.fromCharCode(_byte);\n      } else {\n        if (keepEvenByte && num % 2 !== 0) {\n          this.position++;\n        }\n        break;\n      }\n    }\n    return str;\n  }\n\n  /**\n   * Writes a Boolean value. A single byte is written according to the value parameter,\n   * either 1 if true or 0 if false.\n   * @param    value    A Boolean value determining which byte is written. If the parameter is true,\n   *   the method writes a 1; if false, the method writes a 0.\n   */\n  public writeBoolean(value: boolean): void {\n    this.validateBuffer(ByteArray.SIZE_OF_BOOLEAN);\n\n    this.data.setUint8(this.position++, value ? 1 : 0);\n  }\n\n  /**\n   * Writes a byte to the byte stream.\n   * The low 8 bits of the\n   * parameter are used. The high 24 bits are ignored.\n   * @param    value    A 32-bit integer. The low 8 bits are written to the byte stream.\n   */\n  public writeByte(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_INT8);\n\n    this.data.setInt8(this.position++, value);\n  }\n\n  public writeUnsignedByte(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_UINT8);\n\n    this.data.setUint8(this.position++, value);\n  }\n\n  /**\n   * Writes a sequence of length bytes from the\n   * specified byte array, bytes,\n   * starting offset(zero-based index) bytes\n   * into the byte stream.\n   *\n   *   If the length parameter is omitted, the default\n   * length of 0 is used; the method writes the entire buffer starting at\n   * offset.\n   * If the offset parameter is also omitted, the entire buffer is\n   * written. If offset or length\n   * is out of range, they are clamped to the beginning and end\n   * of the bytes array.\n   * @param    _bytes    The ByteArray object.\n   * @param    offset    A zero-based index indicating the _position into the array to begin writing.\n   * @param    length    An unsigned integer indicating how far into the buffer to write.\n   */\n  public writeBytes(\n    _bytes: ByteArray,\n    // @ts-ignore\n    offset: number = 0,\n    length: number = 0\n  ): void {\n    this.validateBuffer(length);\n\n    const tmp_data = new DataView(_bytes.buffer);\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setUint8(this.position++, tmp_data.getUint8(i));\n    }\n  }\n\n  /**\n   * Writes an IEEE 754 double-precision (64-bit) floating-point number to the byte stream.\n   * @param    value    A double-precision (64-bit) floating-point number.\n   */\n  public writeDouble(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_FLOAT64);\n\n    this.data.setFloat64(\n      this.position,\n      value,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_FLOAT64;\n  }\n\n  /**\n   * Writes an IEEE 754 single-precision (32-bit) floating-point number to the byte stream.\n   * @param    value    A single-precision (32-bit) floating-point number.\n   */\n  public writeFloat(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_FLOAT32);\n\n    this.data.setFloat32(\n      this.position,\n      value,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_FLOAT32;\n  }\n\n  /**\n   * Writes a 32-bit signed integer to the byte stream.\n   * @param    value    An integer to write to the byte stream.\n   */\n  public writeInt(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_INT32);\n\n    this.data.setInt32(\n      this.position,\n      value,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_INT32;\n  }\n\n  /**\n   * Writes a multibyte string to the byte stream using the specified character set.\n   * @param    value    The string value to be written.\n   * @param    charSet    The string denoting the character set to use. Possible character set strings\n   *   include \"shift-jis\", \"cn-gb\", \"iso-8859-1\", and others.\n   *   For a complete list, see Supported Character Sets.\n   */\n  // @ts-ignore\n  public writeMultiByte(value: string, charSet: string): void {}\n\n  /**\n   * Writes a 16-bit integer to the byte stream. The low 16 bits of the parameter are used.\n   * The high 16 bits are ignored.\n   * @param    value    32-bit integer, whose low 16 bits are written to the byte stream.\n   */\n  public writeShort(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_INT16);\n\n    this.data.setInt16(\n      this.position,\n      value,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_INT16;\n  }\n\n  public writeUnsignedShort(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_UINT16);\n\n    this.data.setUint16(\n      this.position,\n      value,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT16;\n  }\n\n  /**\n   * Writes a 32-bit unsigned integer to the byte stream.\n   * @param    value    An unsigned integer to write to the byte stream.\n   */\n  public writeUnsignedInt(value: number): void {\n    this.validateBuffer(ByteArray.SIZE_OF_UINT32);\n\n    this.data.setUint32(\n      this.position,\n      value,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT32;\n  }\n\n  /**\n   * Writes a UTF-8 string to the byte stream. The length of the UTF-8 string in bytes\n   * is written first, as a 16-bit integer, followed by the bytes representing the\n   * characters of the string.\n   * @param    value    The string value to be written.\n   */\n  public writeUTF(value: string): void {\n    let utf8bytes: Uint8Array = this.encodeUTF8(value);\n    let length: number = utf8bytes.length;\n\n    this.validateBuffer(ByteArray.SIZE_OF_UINT16 + length);\n\n    this.data.setUint16(\n      this.position,\n      length,\n      this.endian === ByteArray.LITTLE_ENDIAN\n    );\n    this.position += ByteArray.SIZE_OF_UINT16;\n    this.writeUint8Array(utf8bytes);\n  }\n\n  /**\n   * Writes a UTF-8 string to the byte stream. Similar to the writeUTF() method,\n   * but writeUTFBytes() does not prefix the string with a 16-bit length word.\n   * @param    value    The string value to be written.\n   */\n  public writeUTFBytes(value: string): void {\n    this.writeUint8Array(this.encodeUTF8(value));\n  }\n\n  public toString(): string {\n    return (\n      \"[ByteArray] length:\" +\n      this.length +\n      \", bytesAvailable:\" +\n      this.bytesAvailable\n    );\n  }\n\n  /****************************/\n  /* EXTRA JAVASCRIPT APIs    */\n  /****************************/\n\n  /**\n   * Writes a Uint8Array to the byte stream.\n   * @param    _bytes    The Uint8Array to be written.\n   */\n  public writeUint8Array(_bytes: Uint8Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setUint8(this.position++, _bytes[i]);\n    }\n  }\n\n  /**\n   * Writes a Uint16Array to the byte stream.\n   * @param    _bytes    The Uint16Array to be written.\n   */\n  public writeUint16Array(_bytes: Uint16Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setUint16(\n        this.position,\n        _bytes[i],\n        this.endian === ByteArray.LITTLE_ENDIAN\n      );\n      this.position += ByteArray.SIZE_OF_UINT16;\n    }\n  }\n\n  /**\n   * Writes a Uint32Array to the byte stream.\n   * @param    _bytes    The Uint32Array to be written.\n   */\n  public writeUint32Array(_bytes: Uint32Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setUint32(\n        this.position,\n        _bytes[i],\n        this.endian === ByteArray.LITTLE_ENDIAN\n      );\n      this.position += ByteArray.SIZE_OF_UINT32;\n    }\n  }\n\n  /**\n   * Writes a Int8Array to the byte stream.\n   * @param    _bytes    The Int8Array to be written.\n   */\n  public writeInt8Array(_bytes: Int8Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setInt8(this.position++, _bytes[i]);\n    }\n  }\n\n  /**\n   * Writes a Int16Array to the byte stream.\n   * @param    _bytes    The Int16Array to be written.\n   */\n  public writeInt16Array(_bytes: Int16Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setInt16(\n        this.position,\n        _bytes[i],\n        this.endian === ByteArray.LITTLE_ENDIAN\n      );\n      this.position += ByteArray.SIZE_OF_INT16;\n    }\n  }\n\n  /**\n   * Writes a Int32Array to the byte stream.\n   * @param    _bytes    The Int32Array to be written.\n   */\n  public writeInt32Array(_bytes: Int32Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setInt32(\n        this.position,\n        _bytes[i],\n        this.endian === ByteArray.LITTLE_ENDIAN\n      );\n      this.position += ByteArray.SIZE_OF_INT32;\n    }\n  }\n\n  /**\n   * Writes a Float32Array to the byte stream.\n   * @param    _bytes    The Float32Array to be written.\n   */\n  public writeFloat32Array(_bytes: Float32Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setFloat32(\n        this.position,\n        _bytes[i],\n        this.endian === ByteArray.LITTLE_ENDIAN\n      );\n      this.position += ByteArray.SIZE_OF_FLOAT32;\n    }\n  }\n\n  /**\n   * Writes a Float64Array to the byte stream.\n   * @param    _bytes    The Float64Array to be written.\n   */\n  public writeFloat64Array(_bytes: Float64Array): void {\n    this.validateBuffer(this.position + _bytes.length);\n\n    for (let i = 0; i < _bytes.length; i++) {\n      this.data.setFloat64(\n        this.position,\n        _bytes[i],\n        this.endian === ByteArray.LITTLE_ENDIAN\n      );\n      this.position += ByteArray.SIZE_OF_FLOAT64;\n    }\n  }\n\n  /**\n   * Read a Uint8Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Uint8Array.\n   */\n  public readUint8Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Uint8Array {\n    if (!this.validate(length)) return null;\n    let result: Uint8Array;\n    if (!createNewBuffer) {\n      result = new Uint8Array(\n        this.buffer,\n        this.bufferOffset + this.position,\n        length\n      );\n      this.position += length;\n    } else {\n      result = new Uint8Array(new ArrayBuffer(length));\n      for (let i = 0; i < length; i++) {\n        result[i] = this.data.getUint8(this.position);\n        this.position += ByteArray.SIZE_OF_UINT8;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Read a Uint16Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Uint16Array.\n   */\n  public readUint16Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Uint16Array {\n    const size: number = length * ByteArray.SIZE_OF_UINT16;\n    let result: Uint16Array;\n    if (!this.validate(size)) return null;\n    if (!createNewBuffer) {\n      result = new Uint16Array(\n        this.buffer,\n        this.bufferOffset + this.position,\n        length\n      );\n      this.position += size;\n    } else {\n      result = new Uint16Array(new ArrayBuffer(size));\n      for (let i = 0; i < length; i++) {\n        result[i] = this.data.getUint16(\n          this.position,\n          this.endian === ByteArray.LITTLE_ENDIAN\n        );\n        this.position += ByteArray.SIZE_OF_UINT16;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Read a Uint32Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Uint32Array.\n   */\n  public readUint32Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Uint32Array {\n    const size: number = length * ByteArray.SIZE_OF_UINT32;\n    let result: Uint32Array;\n    if (!this.validate(size)) return null;\n    if (!createNewBuffer) {\n      result = new Uint32Array(\n        this.buffer,\n        this.bufferOffset + this.position,\n        length\n      );\n      this.position += size;\n    } else {\n      result = new Uint32Array(new ArrayBuffer(size));\n      for (let i = 0; i < length; i++) {\n        result[i] = this.data.getUint32(\n          this.position,\n          this.endian === ByteArray.LITTLE_ENDIAN\n        );\n        this.position += ByteArray.SIZE_OF_UINT32;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Read a Int8Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Int8Array.\n   */\n  public readInt8Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Int8Array {\n    if (!this.validate(length)) return null;\n    let result: Int8Array;\n    if (!createNewBuffer) {\n      result = new Int8Array(\n        this.buffer,\n        this.bufferOffset + this.position,\n        length\n      );\n      this.position += length;\n    } else {\n      result = new Int8Array(new ArrayBuffer(length));\n      for (let i = 0; i < length; i++) {\n        result[i] = this.data.getInt8(this.position);\n        this.position += ByteArray.SIZE_OF_INT8;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Read a Int16Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Int16Array.\n   */\n  public readInt16Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Int16Array {\n    const size: number = length * ByteArray.SIZE_OF_INT16;\n    let result: Int16Array;\n    if (!this.validate(size)) return null;\n    if (!createNewBuffer) {\n      result = new Int16Array(\n        this.buffer,\n        this.bufferOffset + this.position,\n        length\n      );\n      this.position += size;\n    } else {\n      result = new Int16Array(new ArrayBuffer(size));\n      for (let i = 0; i < length; i++) {\n        result[i] = this.data.getInt16(\n          this.position,\n          this.endian === ByteArray.LITTLE_ENDIAN\n        );\n        this.position += ByteArray.SIZE_OF_INT16;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Read a Int32Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Int32Array.\n   */\n  public readInt32Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Int32Array {\n    const size: number = length * ByteArray.SIZE_OF_INT32;\n    let result: Int32Array;\n    if (!this.validate(size)) return null;\n    if (!createNewBuffer) {\n      if ((this.bufferOffset + this.position) % 4 === 0) {\n        result = new Int32Array(\n          this.buffer,\n          this.bufferOffset + this.position,\n          length\n        );\n        this.position += size;\n      } else {\n        const tmp: Uint8Array = new Uint8Array(new ArrayBuffer(size));\n        for (let i = 0; i < size; i++) {\n          tmp[i] = this.data.getUint8(this.position);\n          this.position += ByteArray.SIZE_OF_UINT8;\n        }\n        result = new Int32Array(tmp.buffer);\n      }\n    } else {\n      result = new Int32Array(new ArrayBuffer(size));\n      for (let i = 0; i < length; i++) {\n        result[i] = this.data.getInt32(\n          this.position,\n          this.endian === ByteArray.LITTLE_ENDIAN\n        );\n        this.position += ByteArray.SIZE_OF_INT32;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Read a Float32Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Float32Array.\n   */\n  public readFloat32Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Float32Array {\n    const size: number = length * ByteArray.SIZE_OF_FLOAT32;\n    let result: Float32Array;\n    if (!this.validate(size)) return null;\n    if (!createNewBuffer) {\n      if ((this.bufferOffset + this.position) % 4 === 0) {\n        result = new Float32Array(\n          this.buffer,\n          this.bufferOffset + this.position,\n          length\n        );\n        this.position += size;\n      } else {\n        const tmp: Uint8Array = new Uint8Array(new ArrayBuffer(size));\n        for (let i = 0; i < size; i++) {\n          tmp[i] = this.data.getUint8(this.position);\n          this.position += ByteArray.SIZE_OF_UINT8;\n        }\n        result = new Float32Array(tmp.buffer);\n      }\n    } else {\n      result = new Float32Array(new ArrayBuffer(size));\n\n      for (let i = 0; i < length; i++) {\n        result[i] = this.data.getFloat32(\n          this.position,\n          this.endian === ByteArray.LITTLE_ENDIAN\n        );\n        this.position += ByteArray.SIZE_OF_FLOAT32;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Read a Float64Array from the byte stream.\n   * @param    length An unsigned short indicating the length of the Float64Array.\n   */\n  public readFloat64Array(\n    length: number,\n    createNewBuffer: boolean = true\n  ): Float64Array {\n    const size: number = length * ByteArray.SIZE_OF_FLOAT64;\n    if (!this.validate(size)) return null;\n    if (!createNewBuffer) {\n      const result: Float64Array = new Float64Array(\n        this.buffer,\n        this.position,\n        length\n      );\n      this.position += size;\n      return result;\n    }\n    const result = new Float64Array(new ArrayBuffer(size));\n    for (let i = 0; i < length; i++) {\n      result[i] = this.data.getFloat64(\n        this.position,\n        this.endian === ByteArray.LITTLE_ENDIAN\n      );\n      this.position += ByteArray.SIZE_OF_FLOAT64;\n    }\n    return result;\n  }\n\n  public validate(len: number): boolean {\n    // len += this.data.byteOffset;\n    if (\n      this.data.byteLength > 0 &&\n      this._position + len <= this.data.byteLength\n    ) {\n      return true;\n    }\n    throw \"Error #2030: End of file was encountered.\";\n  }\n\n  /**********************/\n  /*  PRIVATE METHODS   */\n  /**********************/\n  private validateBuffer(len: number): void {\n    this.write_position = len > this.write_position ? len : this.write_position;\n    if (this.data.byteLength < len) {\n      const tmp: Uint8Array = new Uint8Array(\n        new ArrayBuffer(len + this.BUFFER_EXT_SIZE)\n      );\n      tmp.set(new Uint8Array(this.data.buffer));\n      this.buffer = tmp.buffer;\n    }\n  }\n\n  /**\n   * UTF-8 Encoding/Decoding\n   */\n  private encodeUTF8(str: string): Uint8Array {\n    let pos: number = 0;\n    const codePoints = this.stringToCodePoints(str);\n    const outputBytes = [];\n\n    while (codePoints.length > pos) {\n      const code_point: number = codePoints[pos++];\n\n      if (this.inRange(code_point, 0xd800, 0xdfff)) {\n        this.encoderError(code_point);\n      } else if (this.inRange(code_point, 0x0000, 0x007f)) {\n        outputBytes.push(code_point);\n      } else {\n        let count;\n        let offset;\n        if (this.inRange(code_point, 0x0080, 0x07ff)) {\n          count = 1;\n          offset = 0xc0;\n        } else if (this.inRange(code_point, 0x0800, 0xffff)) {\n          count = 2;\n          offset = 0xe0;\n        } else if (this.inRange(code_point, 0x10000, 0x10ffff)) {\n          count = 3;\n          offset = 0xf0;\n        }\n\n        outputBytes.push(this.div(code_point, Math.pow(64, count)) + offset);\n\n        while (count > 0) {\n          const temp = this.div(code_point, Math.pow(64, count - 1));\n          outputBytes.push(0x80 + (temp % 64));\n          count -= 1;\n        }\n      }\n    }\n    return new Uint8Array(outputBytes);\n  }\n\n  private decodeUTF8(data: Uint8Array): string {\n    const fatal: boolean = false;\n    let pos: number = 0;\n    let result: string = \"\";\n    let code_point: number;\n    let utf8_code_point = 0;\n    let utf8_bytes_needed = 0;\n    let utf8_bytes_seen = 0;\n    let utf8_lower_boundary = 0;\n\n    while (data.length > pos) {\n      const _byte = data[pos++];\n\n      if (_byte === this.EOF_byte) {\n        if (utf8_bytes_needed !== 0) {\n          code_point = this.decoderError(fatal);\n        } else {\n          code_point = this.EOF_code_point;\n        }\n      } else {\n        if (utf8_bytes_needed === 0) {\n          if (this.inRange(_byte, 0x00, 0x7f)) {\n            code_point = _byte;\n          } else {\n            if (this.inRange(_byte, 0xc2, 0xdf)) {\n              utf8_bytes_needed = 1;\n              utf8_lower_boundary = 0x80;\n              utf8_code_point = _byte - 0xc0;\n            } else if (this.inRange(_byte, 0xe0, 0xef)) {\n              utf8_bytes_needed = 2;\n              utf8_lower_boundary = 0x800;\n              utf8_code_point = _byte - 0xe0;\n            } else if (this.inRange(_byte, 0xf0, 0xf4)) {\n              utf8_bytes_needed = 3;\n              utf8_lower_boundary = 0x10000;\n              utf8_code_point = _byte - 0xf0;\n            } else {\n              this.decoderError(fatal);\n            }\n            utf8_code_point = utf8_code_point * Math.pow(64, utf8_bytes_needed);\n            code_point = null;\n          }\n        } else if (!this.inRange(_byte, 0x80, 0xbf)) {\n          utf8_code_point = 0;\n          utf8_bytes_needed = 0;\n          utf8_bytes_seen = 0;\n          utf8_lower_boundary = 0;\n          pos--;\n          code_point = this.decoderError(fatal, _byte);\n        } else {\n          utf8_bytes_seen += 1;\n          utf8_code_point =\n            utf8_code_point +\n            (_byte - 0x80) * Math.pow(64, utf8_bytes_needed - utf8_bytes_seen);\n\n          if (utf8_bytes_seen !== utf8_bytes_needed) {\n            code_point = null;\n          } else {\n            const cp = utf8_code_point;\n            const lower_boundary = utf8_lower_boundary;\n            utf8_code_point = 0;\n            utf8_bytes_needed = 0;\n            utf8_bytes_seen = 0;\n            utf8_lower_boundary = 0;\n            if (\n              this.inRange(cp, lower_boundary, 0x10ffff) &&\n              !this.inRange(cp, 0xd800, 0xdfff)\n            ) {\n              code_point = cp;\n            } else {\n              code_point = this.decoderError(fatal, _byte);\n            }\n          }\n        }\n      }\n      // Decode string\n      if (code_point !== null && code_point !== this.EOF_code_point) {\n        if (code_point <= 0xffff) {\n          if (code_point > 0) result += String.fromCharCode(code_point);\n        } else {\n          code_point -= 0x10000;\n          result += String.fromCharCode(0xd800 + ((code_point >> 10) & 0x3ff));\n          result += String.fromCharCode(0xdc00 + (code_point & 0x3ff));\n        }\n      }\n    }\n    return result;\n  }\n\n  private encoderError(code_point) {\n    throw \"EncodingError! The code point \" +\n      code_point +\n      \" could not be encoded.\";\n  }\n\n  private decoderError(fatal, opt_code_point?): number {\n    if (fatal) {\n      throw \"DecodingError\";\n    }\n    return opt_code_point || 0xfffd;\n  }\n\n  private EOF_byte: number = -1;\n  private EOF_code_point: number = -1;\n\n  private inRange(a: number, min: number, max: number) {\n    return min <= a && a <= max;\n  }\n\n  private div(n: number, d: number) {\n    return Math.floor(n / d);\n  }\n\n  private stringToCodePoints(string: string) {\n    /** @type {Array.<number>} */\n    let cps = [];\n    // Based on http://www.w3.org/TR/WebIDL/#idl-DOMString\n    let i = 0,\n      n = string.length;\n    while (i < string.length) {\n      let c = string.charCodeAt(i);\n      if (!this.inRange(c, 0xd800, 0xdfff)) {\n        cps.push(c);\n      } else if (this.inRange(c, 0xdc00, 0xdfff)) {\n        cps.push(0xfffd);\n      } else {\n        // (inRange(c, 0xD800, 0xDBFF))\n        if (i === n - 1) {\n          cps.push(0xfffd);\n        } else {\n          let d = string.charCodeAt(i + 1);\n          if (this.inRange(d, 0xdc00, 0xdfff)) {\n            let a = c & 0x3ff;\n            let b = d & 0x3ff;\n            i += 1;\n            cps.push(0x10000 + (a << 10) + b);\n          } else {\n            cps.push(0xfffd);\n          }\n        }\n      }\n      i += 1;\n    }\n    return cps;\n  }\n}\n","/**\n * JavaScript DataArray\n * version : 0.2\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\nexport class CompressionAlgorithm {\n\n    static DEFLATE:string = \"deflate\";\n    static LZMA:string = \"lzma\";\n    static ZLIB:string = \"zlib\";\n\n}","import { ByteArray } from \"./ByteArray\";\nimport { CompressionAlgorithm } from \"./CompressionAlgorithm\";\nimport { LZMAHelper } from \"./LZMAHelper\";\n/**\n * JavaScript DataArray\n * version : 0.2\n * @author Nidin Vinayakan | nidinthb@gmail.com\n *\n * Extended ActionScript3 ByteArray API implementation in JavaScript\n * limitation : size of DataArray cannot be changed\n */\n\nexport class DataArray extends ByteArray {\n  static BIG_ENDIAN: string = \"bigEndian\";\n  static LITTLE_ENDIAN: string = \"littleEndian\";\n\n  constructor(buffer?: ArrayBuffer, offset: number = 0, length: number = 0) {\n    super(buffer, offset, length);\n  }\n\n  public compress(algorithm: string = CompressionAlgorithm.LZMA): void {\n    if (algorithm === CompressionAlgorithm.LZMA) {\n      throw \"Compression error! \" + algorithm + \" not implemented\";\n    } else {\n      throw \"Compression error! \" + algorithm + \" not implemented\";\n    }\n  }\n\n  public decompressBuffer(algorithm: string = CompressionAlgorithm.LZMA): void {\n    if (algorithm === CompressionAlgorithm.LZMA) {\n      try {\n        this.buffer = LZMAHelper.decodeBuffer(this.buffer);\n      } catch (e) {\n        throw \"Uncompression error! \" + algorithm + \" not implemented\";\n      }\n    } else if (algorithm === CompressionAlgorithm.ZLIB) {\n      /*this.buffer = ZLIBHelper.decodeBuffer(this.buffer);*/\n    } else {\n      throw \"Uncompression error! \" + algorithm + \" not implemented\";\n    }\n  }\n\n  public decompress(algorithm: string = CompressionAlgorithm.LZMA): void {\n    if (algorithm === CompressionAlgorithm.LZMA) {\n      try {\n        this.array = LZMAHelper.decode(this.array);\n      } catch (e) {\n        throw \"Uncompression error! \" + algorithm + \" not implemented\";\n      }\n    } else if (algorithm === CompressionAlgorithm.ZLIB) {\n      /*this.array = ZLIBHelper.decode(this.array);*/\n    } else {\n      throw \"Uncompression error! \" + algorithm + \" not implemented\";\n    }\n  }\n\n  public compressAsync(algorithm: string): void {\n    if (algorithm === CompressionAlgorithm.LZMA) {\n      throw `Compression error! ${algorithm} not implemented`;\n    } else {\n      throw `Compression error! ${algorithm}  not implemented`;\n    }\n  }\n\n  public decompressAsync(\n    algorithm: string = CompressionAlgorithm.LZMA,\n    callback = null\n  ): void {\n    if (algorithm === CompressionAlgorithm.LZMA) {\n      LZMAHelper.decodeAsync(this.buffer, function(_data) {\n        this.buffer = _data;\n        if (callback) {\n          callback(_data);\n        }\n      });\n    } else {\n      throw \"Uncompression error! \" + algorithm + \" not implemented\";\n    }\n  }\n\n  public deflate(): void {}\n\n  public inflate(): void {}\n\n  /**\n   * Reads the number of data bytes, specified by the length parameter, from the byte stream.\n   * The bytes are read into the DataArray object specified by the bytes parameter,\n   * and the bytes are written into the destination ByteArray starting at the _position specified by offset.\n   * @param    _bytes    The DataArray object to read data into.\n   * @param    offset    The offset (_position) in bytes at which the read data should be written.\n   * @param    length    The number of bytes to read.  The default value of 0 causes all available data to be read.\n   * @param createNewBuffer\n   */\n\n  public readBytesAsByteArray(\n    _bytes: DataArray = null,\n    offset: number = 0,\n    length: number = 0,\n    createNewBuffer: boolean = false\n  ): DataArray {\n    console.warn(\n      \"[DEPRECATED] readBytesAsByteArray is deprecated use readBytesAsDataArray instead\"\n    );\n    return this.readBytesAsDataArray(_bytes, offset, length, createNewBuffer);\n  }\n  public readBytesAsDataArray(\n    _bytes: DataArray | null = null,\n    offset: number = 0,\n    length: number = 0,\n    createNewBuffer: boolean = false\n  ): DataArray | null {\n    if (length === 0) {\n      length = this.bytesAvailable;\n    } else if (!this.validate(length)) return null;\n\n    if (createNewBuffer) {\n      _bytes = _bytes === null ? new DataArray(new ArrayBuffer(length)) : _bytes;\n      // This method is expensive\n      for (let i = 0; i < length; i++) {\n        _bytes.data.setUint8(i + offset, this.data.getUint8(this.position++));\n      }\n    } else {\n      // Offset argument ignored\n      _bytes = _bytes === null ? new DataArray(null) : _bytes;\n      _bytes.dataView = new DataView(\n        this.data.buffer,\n        this.bufferOffset + this.position,\n        length\n      );\n      this.position += length;\n    }\n\n    return _bytes;\n  }\n\n  /**\n   * Reads an object from the byte array, encoded in AMF\n   * serialized format.\n   * @return    The deserialized object.\n   */\n  public readObject(): any {\n    // return this.readAmfObject();\n    return null;\n  }\n\n  /**\n   * Writes an object into the byte array in AMF\n   * serialized format.\n   * @param    object    The object to serialize.\n   */\n  // @ts-ignore\n  public writeObject(value: any): void {}\n}\n","import { LZMA } from \"../lzma/LZMA\";\n/**\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\nexport class LZMAHelper {\n  static decoder: LZMA = new LZMA();\n  static decoderAsync: Worker | null;\n  static enableAsync: boolean = true;\n  static callback: Function | null;\n  static ENCODE: number = 1;\n  static DECODE: number = 2;\n  private static workerScript =\n    \"../modules/xdata/workers/lzma-worker-bootstrap.js\";\n\n  static init(workerScript?: string): void {\n    if (workerScript) {\n      LZMAHelper.workerScript = workerScript;\n    }\n    if (LZMAHelper.decoderAsync) {\n      LZMAHelper.decoderAsync.terminate();\n      LZMAHelper.decoderAsync = null;\n    }\n    if (LZMAHelper.enableAsync) {\n      LZMAHelper.decoderAsync = new Worker(LZMAHelper.workerScript);\n      LZMAHelper.decoderAsync.onmessage = function(e) {\n        const receivedData: any = e.data;\n\n        if (receivedData.command === LZMAHelper.ENCODE) {\n          // encode not implemented\n        } else if (receivedData.command === LZMAHelper.DECODE) {\n          if (LZMAHelper.callback) {\n            LZMAHelper.callback(receivedData.result);\n            LZMAHelper.callback = null;\n          }\n        }\n      };\n    }\n  }\n\n  /**\n   * TODO : Implement encoder\n   * @param data\n   * @returns {null}\n   */\n  // @ts-ignore\n  static encode(data: ArrayBuffer): ArrayBuffer {\n    throw \"LZMA encoder not implemented!\";\n  }\n\n  static decodeBuffer(data: ArrayBuffer): ArrayBuffer {\n    return LZMAHelper.decoder.decode(new Uint8Array(data)).buffer;\n  }\n\n  static decode(data: Uint8Array): Uint8Array {\n    return LZMAHelper.decoder.decode(data);\n  }\n\n  /**\n   * TODO : Implement encoder\n   * @param data\n   * @param _callback\n   */\n  // @ts-ignore\n  static encodeAsync(data: ArrayBuffer, _callback: Function): void {\n    if (LZMAHelper.enableAsync) {\n      throw \"LZMA encoder not implemented!\";\n    } else {\n      console.log(\"Error! Asynchronous encoding is disabled\");\n    }\n  }\n\n  static decodeAsync(data: ArrayBuffer, _callback: Function): void {\n    if (LZMAHelper.enableAsync) {\n      if (LZMAHelper.callback === null) {\n        LZMAHelper.callback = _callback;\n        if (LZMAHelper.decoderAsync) {\n          LZMAHelper.decoderAsync.postMessage(\n            { data, command: LZMAHelper.DECODE },\n            [data]\n          );\n        }\n      } else {\n        console.log(\"Warning! Another LZMA decoding is running...\");\n      }\n    } else {\n      console.log(\"Error! Asynchronous decoding is disabled\");\n    }\n  }\n}\n","\"use asm\";\n/**\n * @author Nidin Vinayakan | nidinthb@gmail.com\n */\nexport class MEMORY {\n    static u8Index:number = 0;\n    static u16Index:number = 0;\n    static u32Index:number = 0;\n    static u8:Uint8Array;\n    static u16:Uint16Array;\n    static u32:Uint32Array;\n\n    static allocateUint8(len:number):void {\n        MEMORY.u8 = new Uint8Array(len);\n    }\n\n    static allocateUint16(len:number):void {\n        MEMORY.u16 = new Uint16Array(len);\n    }\n\n    static allocateUint32(len:number):void {\n        MEMORY.u32 = new Uint32Array(len);\n    }\n\n    static getUint8():number {\n        if (!MEMORY.u8) {\n            MEMORY.allocateUint8(10);\n        }\n        return MEMORY.u8Index++;\n    }\n\n    static getUint16():number {\n        if (!MEMORY.u16) {\n            MEMORY.allocateUint16(24);\n        }\n        return MEMORY.u16Index++;\n    }\n\n    static getUint32():number {\n        if (!MEMORY.u32) {\n            MEMORY.allocateUint32(10);\n        }\n        return MEMORY.u32Index++;\n    }\n}","module.exports = require(\"tslib\");"],"sourceRoot":""}